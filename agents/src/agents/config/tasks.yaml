reasoning_task:
  description: >
    Given the user's hot take `{find_out}`, explore diverse perspectives
  expected_output: >
    Return a JSON object containing a key for each branch perspective, specifically:
    - consensus_perspective
    - counterfactual_perspective
    - nuanced_perspective

    Example Output:
    [
      "consensus_perspective": "In single sentence, construct a point of view that describes the widely accepted view or mainstream understanding of the topic.",
      "counterfactual_perspective": "In single sentence, construct a point of view that challenges the assumptions got from the consensus_perspective by proposing an opposing or alternative perspective.",
      "nuanced_perspective": "In single sentence, construct a point of view that explores the subtleties, gray areas, or overlooked dimensions of the user's input."    
    ]
  agent: reasoner

research_consensus_perspective:
  description: >
    Research common opinions or widely accepted views about the user's input `{find_out}`.  
    Identify supporting arguments and evidence that reinforce these mainstream perspectives.  
    Ensure findings are relevant and up-to-date, considering the current year is 2025.
  expected_output: >
    Return an array of findings with a "research" field that includes an array of relevant sources each containing:
    - supporting_argument: 
    - url: Direct link to the information source.

    Example Output:
    [
      [
        "supporting_argument": "Formatted concisely and no more than one sentence in length.",
        "research": [
          [
            "title": "Title of the information source",
            "url": "https://example.com/article",
          ]
        ]
      ]
    ]
  agent: reasoner
  context: [reasoning_task]

research_counterfactual_perspective:
  description: >
    Research sources of opposing or alternative perspectives on the user's input `{find_out}`, 
    which challenge the consensus or commonly accepted beliefs.
    Explore "what if" scenarios or paths not typically considered and provide thought-provoking counterpoints.  
    Make sure you find any interesting and relevant information given the current year is 2025.
  expected_output: >
    Return an array of findings with a "research" field that includes an array of relevant sources each containing:
    - supporting_argument: 
    - url: Direct link to the information source.

    Example Output:
    [
      [
        "supporting_argument": "Formatted concisely and no more than one sentence in length.",
        "research": [
          [
            "title": "Title of the information source",
            "url": "https://example.com/article",
          ]
        ]
      ]
    ]
  agent: reasoner
  context: [reasoning_task]

research_nuance_perspective:
  description: >
    Investigate the subtleties, dependencies, and complexities inherent in the user's input `{find_out}`.  
    Identify gray areas or less obvious aspects of the input that could provide deeper insights.
    Make sure you find any interesting and relevant information given the current year is 2025.
  expected_output: >
    Return an array of findings with a "research" field that includes an array of relevant sources each containing:
    - supporting_argument: 
    - url: Direct link to the information source.

    Example Output:
    [
      [
        "supporting_argument": "Formatted concisely and no more than one sentence in length.",
        "research": [
          [
            "title": "Title of the information source",
            "url": "https://example.com/article",
          ]
        ]
      ]
    ]
  agent: reasoner
  context: [reasoning_task]

reporting_task:
  description: >
    Review the provided context and expand each topic into a comprehensive section for a detailed report.
    Synthesize all relevant information into well-structured sections with clear headings and thorough analysis.
    Ensure the report covers all main topics with complete information and professional formatting.
    Since you're interacting through a custom frontend interface, format the output to work optimally with your system's rendering capabilities.
  expected_output: >
    Return a JSON object with comprehensive report on main topics got from all perspectives organized into full sections, each containing detailed information and analysis alongside your verdict based on facts.
    Example Output:
    {
      "consensus_perspective": {
        "heading": "Consensus Perspective",
        "content": "Detailed analysis and information on the consensus perspective."
      },
      "counterfactual_perspective": {
        "heading": "Counterfactual Perspective",
        "content": "Detailed analysis and information on the counterfactual perspective."
      },
      "nuanced_perspective": {
        "heading": "Nuanced Perspective",
        "content": "Detailed analysis and information on the nuanced perspective."
      },
      "verdict": {
        "heading": "Verdict",
        "content": "Your final verdict based on the facts presented in the report."
      }
    }
    Do not include manual line breaks or HTML tags. Keep each section concise for optimal frontend display. The frontend will handle all formatting and layout.
  agent: reporter
